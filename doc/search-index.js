var searchIndex = {};
searchIndex['vec2d'] = {"items":[[0,"","vec2d","Vec2D is a very simple 2D container for storing rectangular data",null,null],[3,"Coord","","2D coordinate",null,null],[12,"x","","X component",0,null],[12,"y","","Y component",0,null],[3,"Rect","","Rectangle defined by inclusive minimum and maximum coordinates",null,null],[3,"Size","","Rectangle dimensions",null,null],[12,"width","","Width of rectangle",1,null],[12,"height","","Height of rectangle",1,null],[3,"Vec2D","","Container for 2D data",null,null],[3,"RectIter","","Iterator over a rectangle within a Vec2D",null,null],[3,"RectIterMut","","Mutable iterator over a rectangle within a Vec2D",null,null],[11,"eq","","",0,{"inputs":[{"name":"coord"},{"name":"coord"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"coord"},{"name":"coord"}],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"coord"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"coord"}],"output":{"name":"coord"}}],[11,"eq","","",2,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"rect"},{"name":"rect"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"rect"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"rect"}],"output":{"name":"rect"}}],[11,"eq","","",1,{"inputs":[{"name":"size"},{"name":"size"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"size"},{"name":"size"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"size"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"size"}],"output":{"name":"size"}}],[11,"fmt","","",3,{"inputs":[{"name":"vec2d"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"vec2d"}],"output":{"name":"vec2d"}}],[11,"new","","Create a coordinate at (x, y)",0,{"inputs":[{"name":"coord"},{"name":"usize"},{"name":"usize"}],"output":{"name":"coord"}}],[11,"width","","Calculate rectangle width",2,{"inputs":[{"name":"rect"}],"output":{"name":"usize"}}],[11,"height","","Calculate rectangle height",2,{"inputs":[{"name":"rect"}],"output":{"name":"usize"}}],[11,"size","","Calculate rectangle size",2,{"inputs":[{"name":"rect"}],"output":{"name":"size"}}],[11,"contains_coord","","Return true if the coordinate is between `min_coord` and\n`max_coord` (inclusive).",2,{"inputs":[{"name":"rect"},{"name":"coord"}],"output":{"name":"bool"}}],[11,"new","","Create a 2D size of (width, height)",1,{"inputs":[{"name":"size"},{"name":"usize"},{"name":"usize"}],"output":{"name":"size"}}],[11,"area","","width * height",1,{"inputs":[{"name":"size"}],"output":{"name":"usize"}}],[11,"contains_coord","","Return true if the coordinate fits within self's width and\nheight, false otherwise.",1,{"inputs":[{"name":"size"},{"name":"coord"}],"output":{"name":"bool"}}],[11,"rect","","Create a rectangle starting at (0, 0) with `self`'s size.",1,{"inputs":[{"name":"size"}],"output":{"name":"rect"}}],[11,"from_example","","Create a Vec2D with the given `size`. All elements are\ninitialized as copies of the `example` element.",3,{"inputs":[{"name":"vec2d"},{"name":"size"},{"name":"elem"}],"output":{"name":"vec2d"}}],[11,"from_vec","","Create a Vec2D with the given `size`. The contents are set to\n`src`. None is returned if the `size` does not match the\nlength of `src`.",3,{"inputs":[{"name":"vec2d"},{"name":"size"},{"name":"vec"}],"output":{"name":"option"}}],[11,"rect","","Shortcut for self.size.rect()",3,{"inputs":[{"name":"vec2d"}],"output":{"name":"rect"}}],[11,"iter","","Iterator over the entire Vec2D.",3,{"inputs":[{"name":"vec2d"}],"output":{"name":"rectiter"}}],[11,"rect_iter","","Create an iterator over a rectangular region of the\nVec2D. None is returned if the given `rect` does not fit\nentirely within the Vec2D.",3,{"inputs":[{"name":"vec2d"},{"name":"rect"}],"output":{"name":"option"}}],[11,"rect_iter_at","","Create an iterator over a rectangular region of the Vec2D with\nthe `start` coord. None is returned if the given `rect` does\nnot fit entirely within the Vec2D or if the `start` coord is\nnot within `rect`.",3,{"inputs":[{"name":"vec2d"},{"name":"rect"},{"name":"coord"}],"output":{"name":"option"}}],[11,"iter_mut","","Mutable iterater over the entire Vec2D.",3,{"inputs":[{"name":"vec2d"}],"output":{"name":"rectitermut"}}],[11,"rect_iter_mut","","Create a mutable iterator over a rectangular region of the\nVec2D. None is returned if the given `rect` does not fit\nentirely within the Vec2D.",3,{"inputs":[{"name":"vec2d"},{"name":"rect"}],"output":{"name":"option"}}],[6,"Item","","",null,null],[11,"next","","",4,{"inputs":[{"name":"rectiter"}],"output":{"name":"option"}}],[6,"Item","","",null,null],[11,"next","","",5,{"inputs":[{"name":"rectitermut"}],"output":{"name":"option"}}],[11,"new","","Create a new Rect defined by inclusive minimum and maximum\ncoordinates. If min_coord is greater than max_coord on either\naxis then None is returned.",2,{"inputs":[{"name":"rect"},{"name":"coord"},{"name":"coord"}],"output":{"name":"option"}}]],"paths":[[3,"Coord"],[3,"Size"],[3,"Rect"],[3,"Vec2D"],[3,"RectIter"],[3,"RectIterMut"]]};
initSearch(searchIndex);
